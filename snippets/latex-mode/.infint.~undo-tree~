(undo-tree-save-format-version . 1)
"566eee32fb26cd289350018ffd47b183dc5766e8"
[nil nil nil nil (26316 20105 823230 292000) 0 nil]
([nil nil ((apply yas--snippet-revive 1 47 #s(yas--snippet nil (#s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #8) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #7 #s(yas--exit 47 nil) nil))) #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) #s(yas--exit 47 nil) 11 nil #s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #7) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #8) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #7 #s(yas--exit 47 nil) nil))) #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) #s(yas--exit 47 nil) 11 nil #s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #7) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) nil nil)) (1 . 47)) nil (26316 20105 823228 982000) 0 nil])
([nil nil ((44 . 50) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -44) (undo-tree-id21 . -1) 45 (42 . 45) (32 . 42) (#("I" 0 1 (fontified t face font-lock-comment-face)) . -32) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -33) (undo-tree-id23 . -1) (#("I" 0 1 (fontified t face font-lock-comment-face)) . -34) (undo-tree-id24 . -1) 35 (32 . 35)) nil (26316 20105 823227 16000) 0 nil])
([nil nil ((65 . 66) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -65) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 66 (62 . 66) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -62) (undo-tree-id5 . -1) (undo-tree-id6 . -1) 63 (59 . 63) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -59) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -60) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -61) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 62 (59 . 62)) nil (26316 20105 823221 567000) 0 nil])
([nil nil ((87 . 96) (79 . 87) (#("\\" 0 1 (fontified t)) . -79) (undo-tree-id0 . -1) (#("i" 0 1 (fontified t)) . -80) (undo-tree-id1 . -1) (#("n" 0 1 (fontified t)) . -81) (undo-tree-id2 . -1) 82 (73 . 82) (72 . 73) 72) nil (26316 20105 823204 622000) 0 nil])
([nil current ((96 . 98) (#(" " 0 1 (fontified t)) . -96) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("$" 0 1 (fontified t)) . -97) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("1" 0 1 (fontified t face font-lock-string-face)) . -98) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 99 (96 . 99) (t 26316 20105 864754 278000)) nil (26316 20117 204871 369000) 0 nil])
nil
