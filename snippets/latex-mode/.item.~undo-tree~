(undo-tree-save-format-version . 1)
"ac2e30c5d391702584e801b833717be9aff4f9ed"
[nil nil nil nil (26316 18129 810480 343000) 0 nil]
([nil nil ((apply yas--snippet-revive 1 47 #s(yas--snippet nil (#s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #8) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #7 #s(yas--exit 47 nil) nil))) #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) #s(yas--exit 47 nil) 2 nil #s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #7) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #8) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #7 #s(yas--exit 47 nil) nil))) #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) #s(yas--exit 47 nil) 2 nil #s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #7) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) nil nil)) (1 . 47)) nil (26316 18129 810478 997000) 0 nil])
([nil nil ((32 . 40) (#("I" 0 1 (fontified t face font-lock-comment-face)) . -32) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 33 (32 . 33)) nil (26316 18129 810477 739000) 0 nil])
([nil nil ((49 . 54)) nil (26316 18129 810475 761000) 0 nil])
([nil nil ((80 . 93) (78 . 80) (#("\\" 0 1 (fontified t)) . -78) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("e" 0 1 (fontified t)) . -79) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("n" 0 1 (fontified t)) . -80) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("d" 0 1 (fontified t)) . -81) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("{" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -82) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("i" 0 1 (fontified t)) . -83) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 84 (82 . 84) (78 . 82) (76 . 78) (62 . 76) (#("v" 0 1 (fontified t)) . -62) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("e" 0 1 (fontified t)) . -63) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("g" 0 1 (fontified t)) . -64) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 65 (61 . 65) (60 . 61) 60) nil (26316 18129 810472 788000) 0 nil])
([nil nil ((85 . 86) (78 . 85)) nil (26316 18129 810437 316000) 0 nil])
([nil nil ((86 . 87) (t 26316 18129 814771 937000)) nil (26316 20840 59864 54000) 0 nil])
([nil current ((#("1" 0 1 (fontified t face font-lock-string-face)) . -85) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 86) nil (26316 20840 59858 667000) 0 nil])
nil
