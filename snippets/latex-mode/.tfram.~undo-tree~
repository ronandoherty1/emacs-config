(undo-tree-save-format-version . 1)
"5f79201f093e09e383cc4c41d8f133daa3aa9fd9"
[nil nil nil nil (26316 18042 145048 907000) 0 nil]
([nil nil ((apply yas--snippet-revive 1 47 #s(yas--snippet nil (#s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #8) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #7 #s(yas--exit 47 nil) nil))) #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) #s(yas--exit 47 nil) 0 nil #s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #7) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #8) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #7 #s(yas--exit 47 nil) nil))) #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) #s(yas--exit 47 nil) 0 nil #s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #7) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) nil nil)) (1 . 47)) nil (26316 18042 145047 693000) 0 nil])
([nil nil ((46 . 49) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -46) (undo-tree-id8 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -47) (undo-tree-id9 . -1) 48 (32 . 48)) nil (26316 18042 145045 724000) 0 nil])
([nil nil ((58 . 64) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -58) (undo-tree-id3 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -59) (undo-tree-id4 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -60) (undo-tree-id5 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -61) (undo-tree-id6 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -62) (undo-tree-id7 . -1) 63 (60 . 63) (58 . 60)) nil (26316 18042 145042 342000) 0 nil])
([nil nil ((77 . 86) (72 . 77) (#("\\" 0 1 (fontified t)) . -72) (undo-tree-id1 . -1) 73 (72 . 73) (#("b" 0 1 (fontified t)) . -72) (undo-tree-id2 . -1) 73 (71 . 73) (70 . 71) 70) nil (26316 18042 145037 601000) 0 nil])
([nil nil ((70 . 71) 70) nil (26316 18042 145033 949000) 0 nil])
([nil nil ((91 . 102) (89 . 91) (88 . 89) (87 . 88) 72) nil (26316 18042 145032 743000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -88) (undo-tree-id0 . -1) 89 (86 . 89)) nil (26316 18042 145030 62000) 0 nil])
([nil nil ((91 . 93)) nil (26316 18042 145003 811000) 0 nil])
([nil current ((92 . 93) (#("2" 0 1 (fontified t face font-lock-string-face)) . -92) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 93 (t 26316 18042 144477 846000)) nil (26316 20929 582560 324000) 0 nil])
nil
