(undo-tree-save-format-version . 1)
"782e72ce17e1b075169efc22abcf17a8fd2b3d8c"
[nil nil nil nil (26390 40592 216610 177000) 0 nil]
([nil nil ((apply yas--snippet-revive 1 47 #s(yas--snippet nil (#s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #8) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #7 #s(yas--exit 47 nil) nil))) #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) #s(yas--exit 47 nil) 3 nil #s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #7) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #8) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #7 #s(yas--exit 47 nil) nil))) #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) #s(yas--exit 47 nil) 3 nil #s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #7) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) nil nil)) (1 . 47)) nil (26390 40592 216608 631000) 0 nil])
([nil nil ((32 . 38)) nil (26390 40592 216606 906000) 0 nil])
([nil nil ((48 . 51) (47 . 48) (#("\\" 0 1 (fontified t face font-lock-comment-face)) . -47) (undo-tree-id26 . -1) (#("m" 0 1 (fontified t face font-lock-comment-face)) . -48) (undo-tree-id27 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -49) (undo-tree-id28 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -50) (undo-tree-id29 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -51) (undo-tree-id30 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -52) (undo-tree-id31 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -53) (undo-tree-id32 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -54) (undo-tree-id33 . -1) 55 (47 . 55)) nil (26390 40592 216604 395000) 0 nil])
([nil nil ((70 . 71) (66 . 70) (#("{" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -66) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("o" 0 1 (fontified t)) . -67) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 68 (67 . 68) (#(")" 0 1 (fontified t face (rainbow-delimiters-mismatched-face))) . -67) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 68 (58 . 68) (57 . 58)) nil (26390 40592 216596 222000) 0 nil])
([nil nil ((69 . 70) (#("{" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -69) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 70) nil (26390 40592 216583 338000) 0 nil])
([nil nil ((70 . 72)) nil (26390 40592 216557 208000) 0 nil])
([nil current ((73 . 75)) nil (26390 40592 216551 229000) 0 nil])
nil
