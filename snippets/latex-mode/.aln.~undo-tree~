(undo-tree-save-format-version . 1)
"4ae4b5bb706530f62b5bbc3728c5b0c2baca2f93"
[nil nil nil nil (26399 62638 838337 886000) 0 nil]
([nil nil ((apply yas--snippet-revive 1 47 #s(yas--snippet nil (#s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #8) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #7 #s(yas--exit 47 nil) nil))) #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) #s(yas--exit 47 nil) 10 nil #s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #7) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #8) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #7 #s(yas--exit 47 nil) nil))) #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) #s(yas--exit 47 nil) 10 nil #s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #7) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) nil nil)) (1 . 47)) nil (26399 62638 838336 554000) 0 nil])
([nil nil ((32 . 38)) nil (26399 62638 838335 540000) 0 nil])
([nil nil ((47 . 51)) nil (26399 62638 838334 823000) 0 nil])
([nil nil ((72 . 84) (70 . 72) (64 . 70) (63 . 64) (#("{" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -63) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("a" 0 1 (fontified t)) . -64) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 65 (57 . 65)) nil (26399 62638 838333 227000) 0 nil])
([nil nil ((82 . 83) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-1-face font-lock-keyword-face))) . -82) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 83) nil (26399 62638 838242 695000) 0 nil])
([nil nil ((71 . 73) (#("j" 0 1 (fontified t)) . -71) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 72 (71 . 72)) nil (26399 62638 838235 860000) 0 nil])
([nil current ((#("k" 0 1 (fontified t)) . -85) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 86) nil (26399 62638 838229 38000) 0 nil])
nil
