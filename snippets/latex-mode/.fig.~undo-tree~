(undo-tree-save-format-version . 1)
"20777c133873e9e81bedf88f8cc2018315cce03e"
[nil nil nil nil (26407 59744 665253 420000) 0 nil]
([nil nil ((apply yas--snippet-revive 1 47 #s(yas--snippet nil (#s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #8) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #7 #s(yas--exit 47 nil) nil))) #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) #s(yas--exit 47 nil) 4 nil #s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #7) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #8) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #7 #s(yas--exit 47 nil) nil))) #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) #s(yas--exit 47 nil) 4 nil #s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #7) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) nil nil)) (1 . 47)) nil (26407 59744 665252 428000) 0 nil])
([nil nil ((44 . 51) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -44) (undo-tree-id79 . -1) 45 (33 . 45)) nil (26407 59744 665251 41000) 0 nil])
([nil nil ((59 . 63)) nil (26407 59744 665249 487000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -236) (69 . 237)) nil (26407 59744 665248 540000) 0 nil])
([nil nil ((130 . 143) (#("0" 0 1 (fontified t)) . -130) (undo-tree-id66 . -1) (#("." 0 1 (fontified t)) . -131) (undo-tree-id67 . -1) (#("5" 0 1 (fontified t)) . -132) (undo-tree-id68 . -1) (#("\\" 0 1 (fontified t)) . -133) (undo-tree-id69 . -1) (#("l" 0 1 (fontified t)) . -134) (undo-tree-id70 . -1) (#("i" 0 1 (fontified t)) . -135) (undo-tree-id71 . -1) (#("n" 0 1 (fontified t)) . -136) (undo-tree-id72 . -1) (#("e" 0 1 (fontified t)) . -137) (undo-tree-id73 . -1) (#("w" 0 1 (fontified t)) . -138) (undo-tree-id74 . -1) (#("i" 0 1 (fontified t)) . -139) (undo-tree-id75 . -1) (#("d" 0 1 (fontified t)) . -140) (undo-tree-id76 . -1) (#("t" 0 1 (fontified t)) . -141) (undo-tree-id77 . -1) (#("h" 0 1 (fontified t)) . -142) (undo-tree-id78 . -1) 143) nil (26407 59744 665245 502000) 0 nil])
([nil nil ((145 . 147) (#("p" 0 1 (fontified t)) . -145) (undo-tree-id50 . -1) (#("l" 0 1 (fontified t)) . -146) (undo-tree-id51 . -1) (#("o" 0 1 (fontified t)) . -147) (undo-tree-id52 . -1) (#("t" 0 1 (fontified t)) . -148) (undo-tree-id53 . -1) (#("s" 0 1 (fontified t)) . -149) (undo-tree-id54 . -1) (#("/" 0 1 (fontified t)) . -150) (undo-tree-id55 . -1) (#("x" 0 1 (fontified t)) . -151) (undo-tree-id56 . -1) (#("_" 0 1 (fontified t)) . -152) (undo-tree-id57 . -1) (#("v" 0 1 (fontified t)) . -153) (undo-tree-id58 . -1) (#("s" 0 1 (fontified t)) . -154) (undo-tree-id59 . -1) (#("_" 0 1 (fontified t)) . -155) (undo-tree-id60 . -1) (#("t" 0 1 (fontified t)) . -156) (undo-tree-id61 . -1) (#("." 0 1 (fontified t)) . -157) (undo-tree-id62 . -1) (#("p" 0 1 (fontified t)) . -158) (undo-tree-id63 . -1) (#("d" 0 1 (fontified t)) . -159) (undo-tree-id64 . -1) (#("f" 0 1 (fontified t)) . -160) (undo-tree-id65 . -1) 161) nil (26407 59744 665233 529000) 0 nil])
([nil nil ((158 . 160) (#("R" 0 1 (fontified t)) . -158) (undo-tree-id0 . -1) (#("u" 0 1 (fontified t)) . -159) (undo-tree-id1 . -1) (#("n" 0 1 (fontified t)) . -160) (undo-tree-id2 . -1) (#("g" 0 1 (fontified t)) . -161) (undo-tree-id3 . -1) (#("e" 0 1 (fontified t)) . -162) (undo-tree-id4 . -1) (#("-" 0 1 (fontified t)) . -163) (undo-tree-id5 . -1) (#("K" 0 1 (fontified t)) . -164) (undo-tree-id6 . -1) (#("u" 0 1 (fontified nil)) . -165) (undo-tree-id7 . -1) 166 (#("t" 0 1 (fontified nil)) . -166) (undo-tree-id8 . -1) (#("t" 0 1 (fontified t)) . -167) (undo-tree-id9 . -1) (#("a" 0 1 (fontified t)) . -168) (undo-tree-id10 . -1) (#(" " 0 1 (fontified t)) . -169) (undo-tree-id11 . -1) (#("s" 0 1 (fontified t)) . -170) (undo-tree-id12 . -1) (#("o" 0 1 (fontified t)) . -171) (undo-tree-id13 . -1) (#("l" 0 1 (fontified t)) . -172) (undo-tree-id14 . -1) (#("u" 0 1 (fontified t)) . -173) (undo-tree-id15 . -1) (#("t" 0 1 (fontified t)) . -174) (undo-tree-id16 . -1) (#("i" 0 1 (fontified t)) . -175) (undo-tree-id17 . -1) (#("o" 0 1 (fontified t)) . -176) (undo-tree-id18 . -1) (#("n" 0 1 (fontified t)) . -177) (undo-tree-id19 . -1) (#(" " 0 1 (fontified t)) . -178) (undo-tree-id20 . -1) (#("v" 0 1 (fontified t)) . -179) (undo-tree-id21 . -1) (#("s" 0 1 (fontified t)) . -180) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t)) . -181) (undo-tree-id23 . -1) (#("e" 0 1 (fontified t)) . -182) (undo-tree-id24 . -1) (#("x" 0 1 (fontified t)) . -183) (undo-tree-id25 . -1) (#("a" 0 1 (fontified t)) . -184) (undo-tree-id26 . -1) (#("c" 0 1 (fontified t)) . -185) (undo-tree-id27 . -1) (#("t" 0 1 (fontified t)) . -186) (undo-tree-id28 . -1) 187 (#(" " 0 1 (fontified t)) . -187) (undo-tree-id29 . -1) (#("s" 0 1 (fontified t)) . -188) (undo-tree-id30 . -1) (#("o" 0 1 (fontified t)) . -189) (undo-tree-id31 . -1) (#("l" 0 1 (fontified t)) . -190) (undo-tree-id32 . -1) (#("u" 0 1 (fontified t)) . -191) (undo-tree-id33 . -1) (#("t" 0 1 (fontified t)) . -192) (undo-tree-id34 . -1) (#("i" 0 1 (fontified t)) . -193) (undo-tree-id35 . -1) (#("o" 0 1 (fontified t)) . -194) (undo-tree-id36 . -1) (#("n" 0 1 (fontified t)) . -195) (undo-tree-id37 . -1) (#(" " 0 1 (fontified t)) . -196) (undo-tree-id38 . -1) (#("f" 0 1 (fontified t)) . -197) (undo-tree-id39 . -1) (#("o" 0 1 (fontified t)) . -198) (undo-tree-id40 . -1) (#("r" 0 1 (fontified t)) . -199) (undo-tree-id41 . -1) (#(" " 0 1 (fontified t)) . -200) (undo-tree-id42 . -1) (#("$" 0 1 (fontified t)) . -201) (undo-tree-id43 . -1) (#("h" 0 1 (fontified t)) . -202) (undo-tree-id44 . -1) (#("=" 0 1 (fontified t)) . -203) (undo-tree-id45 . -1) (#("0" 0 1 (fontified t)) . -204) (undo-tree-id46 . -1) (#("." 0 1 (fontified t)) . -205) (undo-tree-id47 . -1) (#("1" 0 1 (fontified t)) . -206) (undo-tree-id48 . -1) (#("$" 0 1 (fontified t)) . -207) (undo-tree-id49 . -1) 208) nil (26407 59744 665210 347000) 0 nil])
([nil current ((175 . 177) (174 . 175) 172) nil (26407 59744 665152 66000) 0 nil])
nil
